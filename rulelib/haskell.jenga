
## Build rules for haskell to be included within a build.jenga file

## caller must pre-define (before the include): executable-name
## caller must also define: main-entry ghc-version pkgdb
## caller may optionally define: ghc-options default-extensions packages

hs.files : all.files
  egrep '^[^#]+.hs$' all.files > hs.files # ignore filenames containing '#'
  echo main.hs >> hs.files

main.hs : main-entry
  echo import $(cat main-entry) > main.hs

module.names : hs.files
  cat hs.files | sed 's|\(.*\).hs$|\1|' > module.names

hs.rules : module.names
  cat module.names | sed 's|.*|\0.o \0.hi: ghc.compiler @depends : ./ghc.compiler -c \0.hs|' > hs.rules

include hs.rules

link.rule : executable-name
  echo $(cat executable-name) : ghc.linker @o.files main.o : ./ghc.linker *.o -o $(cat executable-name) > link.rule

include link.rule

o.files : module.names : cat module.names | sed 's|$|.o|' > o.files

depends : ghc.compiler @hs.files : ./ghc.compiler -M *.hs -dep-makefile depends

ghc.exe: ghc-version
  echo /home/nic/.ghcup/bin/ghc-$(cat ghc-version) > ghc.exe

ghc.compiler : ghc.exe pkgdb all.options
  echo exec $(cat ghc.exe) -package-db $(cat pkgdb) $(cat all.options) '"$@"' > ghc.compiler
  chmod +x ghc.compiler

all.options : ?ghc-options ?default-extensions
  touch ghc-option default-extensions
  (cat ghc-options ; cat default-extensions | sed 's|^|-X|') | sort > all.options

ghc.linker : ghc.exe pkgdb packs
  echo exec $(cat ghc.exe) -package-db $(cat pkgdb) $(cat packs) '"$@"'  -package containers > ghc.linker
  chmod +x ghc.linker

## TODO: automate the discovery of the package-id hashes

packs: ?packages
  touch packages
  cat packages | sed 's|^|-package-id |' | sort | uniq > packs
